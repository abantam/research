|range_bit_vector_encoding
clk => clk.IN4
rst => rst.IN4
in[0] => in[0].IN1
in[1] => in[1].IN1
in[2] => in[2].IN1
in[3] => in[3].IN1
in[4] => in[4].IN1
in[5] => in[5].IN1
in[6] => in[6].IN1
in[7] => in[7].IN1
in[8] => in[8].IN1
in[9] => in[9].IN1
in[10] => in[10].IN1
in[11] => in[11].IN1
in[12] => in[12].IN1
in[13] => in[13].IN1
in[14] => in[14].IN1
in[15] => in[15].IN1
lower[0] => lower[0].IN1
lower[1] => lower[1].IN1
lower[2] => lower[2].IN1
lower[3] => lower[3].IN1
lower[4] => lower[4].IN1
lower[5] => lower[5].IN1
lower[6] => lower[6].IN1
lower[7] => lower[7].IN1
lower[8] => lower[8].IN1
lower[9] => lower[9].IN1
lower[10] => lower[10].IN1
lower[11] => lower[11].IN1
lower[12] => lower[12].IN1
lower[13] => lower[13].IN1
lower[14] => lower[14].IN1
lower[15] => lower[15].IN1
upper[0] => upper[0].IN1
upper[1] => upper[1].IN1
upper[2] => upper[2].IN1
upper[3] => upper[3].IN1
upper[4] => upper[4].IN1
upper[5] => upper[5].IN1
upper[6] => upper[6].IN1
upper[7] => upper[7].IN1
upper[8] => upper[8].IN1
upper[9] => upper[9].IN1
upper[10] => upper[10].IN1
upper[11] => upper[11].IN1
upper[12] => upper[12].IN1
upper[13] => upper[13].IN1
upper[14] => upper[14].IN1
upper[15] => upper[15].IN1
match << last_stage:ls.match


|range_bit_vector_encoding|first_stage:fs
clk => signal[0]~reg0.CLK
clk => signal[1]~reg0.CLK
clk => signal[2]~reg0.CLK
rst => signal[0]~reg0.ACLR
rst => signal[1]~reg0.ACLR
rst => signal[2]~reg0.ACLR
A1[0] => LessThan0.IN4
A1[0] => LessThan1.IN4
A1[0] => Equal0.IN3
A1[0] => Equal2.IN3
A1[0] => Equal3.IN3
A1[1] => LessThan0.IN3
A1[1] => LessThan1.IN3
A1[1] => Equal0.IN2
A1[1] => Equal2.IN2
A1[1] => Equal3.IN2
A1[2] => LessThan0.IN2
A1[2] => LessThan1.IN2
A1[2] => Equal0.IN1
A1[2] => Equal2.IN1
A1[2] => Equal3.IN1
A1[3] => LessThan0.IN1
A1[3] => LessThan1.IN1
A1[3] => Equal0.IN0
A1[3] => Equal2.IN0
A1[3] => Equal3.IN0
LB1[0] => LessThan0.IN8
LB1[0] => LessThan2.IN4
LB1[0] => Equal1.IN3
LB1[0] => Equal2.IN7
LB1[0] => Equal3.IN7
LB1[1] => LessThan0.IN7
LB1[1] => LessThan2.IN3
LB1[1] => Equal1.IN2
LB1[1] => Equal2.IN6
LB1[1] => Equal3.IN6
LB1[2] => LessThan0.IN6
LB1[2] => LessThan2.IN2
LB1[2] => Equal1.IN1
LB1[2] => Equal2.IN5
LB1[2] => Equal3.IN5
LB1[3] => LessThan0.IN5
LB1[3] => LessThan2.IN1
LB1[3] => Equal1.IN0
LB1[3] => Equal2.IN4
LB1[3] => Equal3.IN4
UB1[0] => LessThan1.IN8
UB1[0] => LessThan2.IN8
UB1[0] => Equal0.IN7
UB1[0] => Equal1.IN7
UB1[1] => LessThan1.IN7
UB1[1] => LessThan2.IN7
UB1[1] => Equal0.IN6
UB1[1] => Equal1.IN6
UB1[2] => LessThan1.IN6
UB1[2] => LessThan2.IN6
UB1[2] => Equal0.IN5
UB1[2] => Equal1.IN5
UB1[3] => LessThan1.IN5
UB1[3] => LessThan2.IN5
UB1[3] => Equal0.IN4
UB1[3] => Equal1.IN4
signal[0] <= signal[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
signal[1] <= signal[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
signal[2] <= signal[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|range_bit_vector_encoding|middle_stage:ms1
clk => sig_nxt[0]~reg0.CLK
clk => sig_nxt[1]~reg0.CLK
clk => sig_nxt[2]~reg0.CLK
clk => sig_mid[0].CLK
clk => sig_mid[1].CLK
clk => sig_mid[2].CLK
clk => sig_mid[3].CLK
rst => sig_mid[0].ACLR
rst => sig_mid[1].ACLR
rst => sig_mid[2].ACLR
rst => sig_mid[3].ACLR
rst => sig_nxt[0]~reg0.ENA
rst => sig_nxt[2]~reg0.ENA
rst => sig_nxt[1]~reg0.ENA
An[0] => Equal0.IN3
An[0] => LessThan0.IN4
An[0] => Equal1.IN3
An[0] => LessThan1.IN4
An[0] => always0.IN1
An[0] => always0.IN1
An[0] => Equal2.IN2
An[1] => Equal0.IN2
An[1] => LessThan0.IN3
An[1] => Equal1.IN2
An[1] => LessThan1.IN3
An[1] => always0.IN1
An[1] => always0.IN1
An[1] => always0.IN1
An[1] => Equal2.IN1
An[2] => Equal0.IN1
An[2] => LessThan0.IN2
An[2] => Equal1.IN1
An[2] => LessThan1.IN2
An[2] => always0.IN1
An[2] => always0.IN1
An[2] => Equal2.IN0
An[3] => Equal0.IN0
An[3] => LessThan0.IN1
An[3] => Equal1.IN0
An[3] => LessThan1.IN1
An[3] => Equal2.IN3
LBn[0] => Equal1.IN7
LBn[0] => LessThan1.IN8
LBn[1] => Equal1.IN6
LBn[1] => LessThan1.IN7
LBn[2] => Equal1.IN5
LBn[2] => LessThan1.IN6
LBn[3] => Equal1.IN4
LBn[3] => LessThan1.IN5
UBn[0] => Equal0.IN7
UBn[0] => LessThan0.IN8
UBn[1] => Equal0.IN6
UBn[1] => LessThan0.IN7
UBn[2] => Equal0.IN5
UBn[2] => LessThan0.IN6
UBn[3] => Equal0.IN4
UBn[3] => LessThan0.IN5
sig[0] => ~NO_FANOUT~
sig[1] => ~NO_FANOUT~
sig[2] => ~NO_FANOUT~
sig_nxt[0] <= sig_nxt[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
sig_nxt[1] <= sig_nxt[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
sig_nxt[2] <= sig_nxt[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|range_bit_vector_encoding|middle_stage:ms2
clk => sig_nxt[0]~reg0.CLK
clk => sig_nxt[1]~reg0.CLK
clk => sig_nxt[2]~reg0.CLK
clk => sig_mid[0].CLK
clk => sig_mid[1].CLK
clk => sig_mid[2].CLK
clk => sig_mid[3].CLK
rst => sig_mid[0].ACLR
rst => sig_mid[1].ACLR
rst => sig_mid[2].ACLR
rst => sig_mid[3].ACLR
rst => sig_nxt[0]~reg0.ENA
rst => sig_nxt[2]~reg0.ENA
rst => sig_nxt[1]~reg0.ENA
An[0] => Equal0.IN3
An[0] => LessThan0.IN4
An[0] => Equal1.IN3
An[0] => LessThan1.IN4
An[0] => always0.IN1
An[0] => always0.IN1
An[0] => Equal2.IN2
An[1] => Equal0.IN2
An[1] => LessThan0.IN3
An[1] => Equal1.IN2
An[1] => LessThan1.IN3
An[1] => always0.IN1
An[1] => always0.IN1
An[1] => always0.IN1
An[1] => Equal2.IN1
An[2] => Equal0.IN1
An[2] => LessThan0.IN2
An[2] => Equal1.IN1
An[2] => LessThan1.IN2
An[2] => always0.IN1
An[2] => always0.IN1
An[2] => Equal2.IN0
An[3] => Equal0.IN0
An[3] => LessThan0.IN1
An[3] => Equal1.IN0
An[3] => LessThan1.IN1
An[3] => Equal2.IN3
LBn[0] => Equal1.IN7
LBn[0] => LessThan1.IN8
LBn[1] => Equal1.IN6
LBn[1] => LessThan1.IN7
LBn[2] => Equal1.IN5
LBn[2] => LessThan1.IN6
LBn[3] => Equal1.IN4
LBn[3] => LessThan1.IN5
UBn[0] => Equal0.IN7
UBn[0] => LessThan0.IN8
UBn[1] => Equal0.IN6
UBn[1] => LessThan0.IN7
UBn[2] => Equal0.IN5
UBn[2] => LessThan0.IN6
UBn[3] => Equal0.IN4
UBn[3] => LessThan0.IN5
sig[0] => ~NO_FANOUT~
sig[1] => ~NO_FANOUT~
sig[2] => ~NO_FANOUT~
sig_nxt[0] <= sig_nxt[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
sig_nxt[1] <= sig_nxt[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
sig_nxt[2] <= sig_nxt[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|range_bit_vector_encoding|last_stage:ls
clk => sig_last[0].CLK
clk => sig_last[1].CLK
rst => sig_last[0].ACLR
rst => sig_last[1].ACLR
As[0] => LessThan0.IN4
As[0] => LessThan1.IN4
As[0] => match.IN1
As[0] => Equal0.IN2
As[1] => LessThan0.IN3
As[1] => LessThan1.IN3
As[1] => match.IN1
As[1] => Equal0.IN1
As[2] => LessThan0.IN2
As[2] => LessThan1.IN2
As[2] => match.IN1
As[2] => Equal0.IN0
As[3] => LessThan0.IN1
As[3] => LessThan1.IN1
As[3] => Equal0.IN3
LBs[0] => LessThan1.IN8
LBs[1] => LessThan1.IN7
LBs[2] => LessThan1.IN6
LBs[3] => LessThan1.IN5
UBs[0] => LessThan0.IN8
UBs[1] => LessThan0.IN7
UBs[2] => LessThan0.IN6
UBs[3] => LessThan0.IN5
sig[0] => ~NO_FANOUT~
sig[1] => ~NO_FANOUT~
sig[2] => ~NO_FANOUT~
sig[3] => ~NO_FANOUT~
match <= match.DB_MAX_OUTPUT_PORT_TYPE


